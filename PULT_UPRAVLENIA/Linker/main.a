;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.04.4a Advanced
;Automatic Program Generator
;© Copyright 1998-2009 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 10/4/2011
;Author  : NeVaDa
;Company : WERD
;Comments:
;
;
;Chip type               : ATtiny2313
;AVR Core Clock frequency: 16.000000 MHz
;Memory model            : Tiny
;External RAM size       : 0
;Data Stack size         : 32
;*****************************************************/
;
;#include <tiny2313.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x50
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_standby=0x40
;PCODE: $00000006 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $00000007 VOL: 0
	#endif
;PCODE: $00000008 VOL: 0
;PCODE: $00000009 VOL: 0
;
;// 1 Wire Bus functions
;#asm
;PCODE: $0000000A VOL: 0
   .equ __w1_port=0x1B ;PORTA
;PCODE: $0000000B VOL: 0
   .equ __w1_bit=0
;PCODE: $0000000C VOL: 0
;PCODE: $0000000D VOL: 0
; 0000 001D #endasm
;#include <1wire.h>
;
;// DS1820 Temperature Sensor functions
;#include <ds1820.h>
;
;#include <delay.h>
;// Alphanumeric LCD Module functions
;#asm
;PCODE: $0000000E VOL: 0
   .equ __lcd_port=0x18 ;PORTB
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0027 #endasm
;#include <lcd.h>
;
;// Standard Input/Output functions
;#include <stdio.h>
;
;// Declare your global variables here
;
;void main(void)
; 0000 0030 {

	.CSEG
;PCODE: $00000011 VOL: 0
; 0000 0031 // Declare your local variables here
; 0000 0032 int counter = 0;
; 0000 0033 unsigned char buff[16];
; 0000 0034 
; 0000 0035 // Crystal Oscillator division factor: 1
; 0000 0036 #pragma optsize-
; 0000 0037 CLKPR=0x80;
;PCODE: $00000012 VOL: 0
;	counter -> R16,R17
;	buff -> Y+0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0038 CLKPR=0x00;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0039 #ifdef _OPTIMIZE_SIZE_
; 0000 003A #pragma optsize+
; 0000 003B #endif
; 0000 003C 
; 0000 003D // Input/Output Ports initialization
; 0000 003E // Port A initialization
; 0000 003F // Func2=In Func1=In Func0=In
; 0000 0040 // State2=T State1=T State0=T
; 0000 0041 PORTA=0x00;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0042 DDRA=0x00;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0043 
; 0000 0044 // Port B initialization
; 0000 0045 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0046 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0047 PORTB=0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0048 DDRB=0x00;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0049 
; 0000 004A // Port D initialization
; 0000 004B // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 004C // State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 004D PORTD=0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 004E DDRD=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 004F 
; 0000 0050 // Timer/Counter 0 initialization
; 0000 0051 // Clock source: System Clock
; 0000 0052 // Clock value: Timer 0 Stopped
; 0000 0053 // Mode: Normal top=FFh
; 0000 0054 // OC0A output: Disconnected
; 0000 0055 // OC0B output: Disconnected
; 0000 0056 TCCR0A=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0057 TCCR0B=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0058 TCNT0=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0059 OCR0A=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 005A OCR0B=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 005B 
; 0000 005C // Timer/Counter 1 initialization
; 0000 005D // Clock source: System Clock
; 0000 005E // Clock value: Timer1 Stopped
; 0000 005F // Mode: Normal top=FFFFh
; 0000 0060 // OC1A output: Discon.
; 0000 0061 // OC1B output: Discon.
; 0000 0062 // Noise Canceler: Off
; 0000 0063 // Input Capture on Falling Edge
; 0000 0064 // Timer1 Overflow Interrupt: Off
; 0000 0065 // Input Capture Interrupt: Off
; 0000 0066 // Compare A Match Interrupt: Off
; 0000 0067 // Compare B Match Interrupt: Off
; 0000 0068 TCCR1A=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0069 TCCR1B=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 006A TCNT1H=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 006B TCNT1L=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 006C ICR1H=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 006D ICR1L=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 006E OCR1AH=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 006F OCR1AL=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0070 OCR1BH=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0071 OCR1BL=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0072 
; 0000 0073 // External Interrupt(s) initialization
; 0000 0074 // INT0: Off
; 0000 0075 // INT1: Off
; 0000 0076 // Interrupt on any change on pins PCINT0-7: Off
; 0000 0077 GIMSK=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0078 MCUCR=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0079 
; 0000 007A // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 007B TIMSK=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 007C 
; 0000 007D // Universal Serial Interface initialization
; 0000 007E // Mode: Disabled
; 0000 007F // Clock source: Register & Counter=no clk.
; 0000 0080 // USI Counter Overflow Interrupt: Off
; 0000 0081 USICR=0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0082 
; 0000 0083 // USART initialization
; 0000 0084 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0085 // USART Receiver: On
; 0000 0086 // USART Transmitter: On
; 0000 0087 // USART Mode: Asynchronous
; 0000 0088 // USART Baud Rate: 9600
; 0000 0089 UCSRA=0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 008A UCSRB=0x18;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 008B UCSRC=0x06;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 008C UBRRH=0x00;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 008D UBRRL=0x67;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 008E 
; 0000 008F // Analog Comparator initialization
; 0000 0090 // Analog Comparator: Off
; 0000 0091 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0092 ACSR=0x80;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0093 
; 0000 0094 // 1 Wire Bus initialization
; 0000 0095 w1_init();
;PCODE: $00000057 VOL: 0
; 0000 0096 
; 0000 0097 // LCD module initialization
; 0000 0098 lcd_init(16);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0099 
; 0000 009A lcd_gotoxy(0,0);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 009B lcd_puts("PULTA v0.1");
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 009C while (1)
;PCODE: $00000064 VOL: 0
; 0000 009D       {
; 0000 009E       counter++;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 009F       if(DDRB == 247)
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 00A0       {
; 0000 00A1       sprintf(buff,"C:%d - %d", counter,DDRB);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 00A2       lcd_gotoxy(0,0);
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 00A3         lcd_puts(buff);
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 00A4 
; 0000 00A5               lcd_clear();
;PCODE: $00000081 VOL: 0
; 0000 00A6 
; 0000 00A7 
; 0000 00A8         }
; 0000 00A9 
; 0000 00AA              if(counter >=3600)
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 00AB                 counter=0;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 00AC              delay_us(3600);
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 00AD         if(PIND.4 == 0 || PIND.5 == 0 || PIND.6 == 0 )
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 00AE         {
; 0000 00AF             DDRB = 49;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 00B0 
; 0000 00B1         }
; 0000 00B2         else
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 00B3         {
; 0000 00B4                 //PORTB=0x00;
; 0000 00B5                 DDRB=247;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 00B6         }
;PCODE: $0000009E VOL: 0
; 0000 00B7       // Place your code here
; 0000 00B8 
; 0000 00B9       };
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 00BA }
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0

	.DSEG
_0x3:
	.BYTE 0xB
